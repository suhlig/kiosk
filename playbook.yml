---
- name: Kiosk
  hosts: all

  pre_tasks:
    - name: Lookup binary path from artifacts.json
      ansible.builtin.set_fact:
        binary_path: "{{ item['path'] }}"
      when: |
        item['goos'] is defined and item['goos'] == 'linux'
        and item['goarch'] is defined and item['goarch'] == 'arm'
        and item['goarm'] is defined and item['goarm'] == '7'
        and item['type'] is defined and item['type'] == 'Binary'
      loop: "{{ lookup('file', playbook_dir + '/dist/artifacts.json') | from_json }}"
      tags: [ kiosk, goreleaser, binary, path, artifacts ]

  tasks:
    - name: Config file is present
      become: true
      copy:
        src: kiosk.yml
        dest: /etc/kiosk.yml
        mode: '0644'
        owner: "{{ ansible_user_id }}"
      register: config_copied
      tags: [ kiosk, yaml, config ]

    - name: Service is restarted
      systemd:
        name: kiosk.service
        state: restarted
      when: config_copied.changed
      tags: [ kiosk, config, systemd, service ]

  roles:
    - role: nerab.raspi
      become: true
      tags: [ nerab ]
    - role: kiosk
      become: true
      tags: [ kiosk, software ]
    - role: suhlig.simple_systemd_service
      become: true
      vars:
        systemd:
          target: graphical.target
        service_binary: kiosk
        program:
          name: kiosk
          description: Display kiosk
          runtime_user: "{{ ansible_user_id }}"
          binary: "{{ binary_path }}"
          parameters:
            - --kiosk
            - --verbose
            - --interval 10s
            - --http-address :8011
            - /etc/kiosk.yml
          environment:
            - DISPLAY=:0.0
            - MQTT_URL="{{ mqtt_url }}"
      tags: [ kiosk, systemd, service ]
    - role: geerlingguy.ntp
      vars:
        ntp_timezone: Europe/Berlin
        ntp_manage_config: true
        ntp_servers:
          - ptbtime1.ptb.de iburst
          - ptbtime2.ptb.de iburst
          - ptbtime3.ptb.de iburst
      become: true
      tags: [ ntp ]
    - role: jnv.unattended-upgrades
      vars:
        unattended_origins_patterns:
          - 'origin=Raspbian,codename=${distro_codename},label=Raspbian'
        unattended_automatic_reboot_time: "05:46"
      become: true
      tags: [ apt, unattended, upgrade ]
